#import <Foundation/Foundation.h>
#import "SWGContactFull.h"
#import "SWGCreateContactParams.h"
#import "SWGDeleteContact.h"
#import "SWGListContacts.h"
#import "SWGApi.h"

/**
* Phone.com API
* This is a Phone.com api Swagger definition
*
* OpenAPI spec version: 1.0.0
* Contact: apisupport@phone.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGContactsApi: NSObject <SWGApi>

extern NSString* kSWGContactsApiErrorDomain;
extern NSInteger kSWGContactsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Add a new address book contact for an extension
/// For more on the input fields, see Account Contacts.
///
/// @param accountId Account ID
/// @param extensionId Extension ID
/// @param data Contact data (optional)
/// 
///  code:201 message:"Created",
///  code:401 message:"Unauthorized access",
///  code:403 message:"Forbidden",
///  code:422 message:"Invalid Data"
///
/// @return SWGContactFull*
-(NSURLSessionTask*) createAccountExtensionContactWithAccountId: (NSNumber*) accountId
    extensionId: (NSNumber*) extensionId
    data: (SWGCreateContactParams*) data
    completionHandler: (void (^)(SWGContactFull* output, NSError* error)) handler;


/// 
/// 
///
/// @param accountId Account ID
/// @param extensionId Extension ID
/// @param contactId Contact ID
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized access",
///  code:403 message:"Forbidden"
///
/// @return SWGDeleteContact*
-(NSURLSessionTask*) deleteAccountExtensionContactWithAccountId: (NSNumber*) accountId
    extensionId: (NSNumber*) extensionId
    contactId: (NSNumber*) contactId
    completionHandler: (void (^)(SWGDeleteContact* output, NSError* error)) handler;


/// Retrieve the details of an address book contact
/// For more info on the fields shown, see Account Contacts.
///
/// @param accountId Account ID
/// @param extensionId Extension ID
/// @param contactId Contact ID
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized access",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGContactFull*
-(NSURLSessionTask*) getAccountExtensionContactWithAccountId: (NSNumber*) accountId
    extensionId: (NSNumber*) extensionId
    contactId: (NSNumber*) contactId
    completionHandler: (void (^)(SWGContactFull* output, NSError* error)) handler;


/// Show a list of address book contacts
/// See Account Contacts for more info on the fields in each item.
///
/// @param accountId Account ID
/// @param extensionId Extension ID
/// @param filtersId ID filter (optional)
/// @param filtersGroupId Group filter (optional)
/// @param filtersUpdatedAt Updated At filter (optional)
/// @param sortId ID sorting (optional)
/// @param sortUpdatedAt Updated At sorting (optional)
/// @param limit Max results (optional)
/// @param offset Results to skip (optional)
/// @param fields Field set (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized access",
///  code:403 message:"Forbidden"
///
/// @return SWGListContacts*
-(NSURLSessionTask*) listAccountExtensionContactsWithAccountId: (NSNumber*) accountId
    extensionId: (NSNumber*) extensionId
    filtersId: (NSArray<NSString*>*) filtersId
    filtersGroupId: (NSArray<NSString*>*) filtersGroupId
    filtersUpdatedAt: (NSArray<NSString*>*) filtersUpdatedAt
    sortId: (NSString*) sortId
    sortUpdatedAt: (NSString*) sortUpdatedAt
    limit: (NSNumber*) limit
    offset: (NSNumber*) offset
    fields: (NSString*) fields
    completionHandler: (void (^)(SWGListContacts* output, NSError* error)) handler;


/// 
/// For more on the input fields, see Account Contacts.
///
/// @param accountId Account ID
/// @param extensionId Extension ID
/// @param contactId Contact ID
/// @param data Contact data (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized access",
///  code:403 message:"Forbidden",
///  code:422 message:"Invalid Data"
///
/// @return SWGContactFull*
-(NSURLSessionTask*) replaceAccountExtensionContactWithAccountId: (NSNumber*) accountId
    extensionId: (NSNumber*) extensionId
    contactId: (NSNumber*) contactId
    data: (SWGCreateContactParams*) data
    completionHandler: (void (^)(SWGContactFull* output, NSError* error)) handler;



@end
